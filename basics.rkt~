#lang racket

#|

this is a guessing game that finds out what you wanted via binary search


|#

(define (foo n)
  (if (> n 5)
      (+ n 10)
      (+ n 5)))

;this returns the sum of the exponents
(define (exponents n)
  (letrec ([recur (lambda (sum acc n counter)
                   (if (= n counter)
                       sum
                       (recur (+ sum acc) (* acc n) n (+ counter 1))))])
    (recur 0 1 n 0)))


(define (sum-of-numbers n)
  (letrec ([recur (lambda (n acc counter)
                    (if (> counter n)
                        acc
                        (recur n (+ acc counter) (+ 1 counter))))])
    (recur n 0 0)))



    
        



